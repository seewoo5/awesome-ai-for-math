name: Generate subject pages

on:
  push:
    branches: ["main"]
  # allow manual triggering
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Generate subject pages
        run: |
          python3 - <<'PY'
          import os
          import re
          from pathlib import Path

          # Path to README
          readme = Path('README.md')
          if not readme.exists():
              raise SystemExit('README.md not found')
          lines = readme.read_text(encoding='utf-8').splitlines()

          # locate table start
          start = None
          for idx, line in enumerate(lines):
              if line.lstrip().startswith('| Title'):
                  start = idx
                  break
          if start is None:
              raise SystemExit('Table header not found in README')

          # locate table end (before <!-- Table end --> or next comment)
          end = len(lines)
          for j in range(start + 2, len(lines)):
              if lines[j].strip().startswith('<!--'):
                  end = j
                  break

          # Extract header and rows
          header = lines[start]
          separator = lines[start + 1] if start + 1 < len(lines) else None
          table_rows = lines[start + 2:end]

          subjects = {}
          for row in table_rows:
              # Each row: | Title | Subject(s) | Venue & Year | Links & Resources |
              cols = [c.strip() for c in row.strip('|').split('|')]
              if len(cols) < 4:
                  continue
              subjects_field = cols[1]
              # split by comma and strip spaces
              for sub in [s.strip() for s in subjects_field.split(',')]:
                  if not sub:
                      continue
                  subjects.setdefault(sub, []).append(row)

          out_dir = Path('subjects')
          out_dir.mkdir(exist_ok=True)

          for sub, rows in subjects.items():
              slug = re.sub(r'[^a-z0-9]+', '-', sub.lower()).strip('-')
              path = out_dir / f"{slug}.md"
              with path.open('w', encoding='utf-8') as f:
                  # YAML front matter
                  f.write('---\n')
                  f.write(f"title: {sub}\n")
                  f.write('layout: default\n')
                  f.write('---\n\n')
                  # Page heading
                  f.write(f'# {sub} papers\n\n')
                  # Write the table header
                  f.write('| Title | Subject(s) | Venue & Year | Links & Resources |\n')
                  f.write('| :--- | :--- | :--- | :--- |\n')
                  for r in rows:
                      f.write(r + '\n')

          PY

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # Add generated pages
          git add subjects
          # Only commit if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "chore: auto-generate subject pages"
            git push
          else
            echo "No subject pages updates to commit."
          
